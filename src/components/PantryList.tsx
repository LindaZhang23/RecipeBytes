import React, { useState, useEffect } from "react";
import { addIngredient, getIngredients, updateIngredient, deleteIngredient } from "../services/ingredientService";
import { Category, Ingredient } from "../models/Ingredient";
import './../styles/PantryList.css';

const PantryList: React.FC = () => {
  const [title, setTitle] = useState<string>("");
  const [quantity, setQuantity] = useState<number>(0);
  const [category, setCategory] = useState<Category>(Category.OTHER);
  const [expiration, setExpiration] = useState<string>("");
  const [ingredients, setIngredients] = useState<Ingredient[]>([]);

  useEffect(() => {
    const fetchIngredients = async () => {
      const fetchedIngredients = await getIngredients();
      setIngredients(fetchedIngredients);
    };
    fetchIngredients();
  }, []);

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const newIngredient = new Ingredient(
      "", // ID will be generated by Firestore
      title,
      quantity,
      category,
      new Date(expiration)
    );
    await addIngredient(newIngredient);
    // Clear the form
    setTitle("");
    setQuantity(0);
    setCategory(Category.OTHER);
    setExpiration("");
    // Fetch updated ingredients
    const updatedIngredients = await getIngredients();
    setIngredients(updatedIngredients);
  };

  return (
    <div>
      <main className="container">
        <h1 className="header">Pantry</h1>
        <button type="button" className="button header">‚®Å New Item</button>
        <section className="pantry">
          <form onSubmit={handleSubmit}>
            <div>
              <label htmlFor="title">Title:</label>
              <input
                type="text"
                id="title"
                value={title}
                onChange={(e) => setTitle(e.target.value)}
                required
              />
            </div>
            <div>
              <label htmlFor="quantity">Quantity:</label>
              <input
                type="number"
                id="quantity"
                value={quantity}
                onChange={(e) => setQuantity(Number(e.target.value))}
                required
              />
            </div>
            <div>
              <label htmlFor="category">Category:</label>
              <select
                id="category"
                value={category}
                onChange={(e) => setCategory(e.target.value as Category)}
                required
              >
                <option value={Category.DAIRY}>Dairy</option>
                <option value={Category.VEGETABLE}>Vegetable</option>
                <option value={Category.FRUIT}>Fruit</option>
                <option value={Category.MEAT}>Meat</option>
                <option value={Category.GRAIN}>Grain</option>
                <option value={Category.OTHER}>Other</option>
              </select>
            </div>
            <div>
              <label htmlFor="expiration">Expiration Date:</label>
              <input
                type="date"
                id="expiration"
                value={expiration}
                onChange={(e) => setExpiration(e.target.value)}
                required
              />
            </div>
            <button type="submit" className="button">Add Ingredient</button>
          </form>
          <div className="ingredient-list">
            <h2>Ingredients</h2>
            <ul>
              {ingredients.map((ingredient) => (
                <li key={ingredient.id}>
                  {ingredient.title} - {ingredient.quantity} - {ingredient.category} - {ingredient.expiration.toDateString()}
                  <button onClick={() => deleteIngredient(ingredient.id)}>Delete</button>
                </li>
              ))}
            </ul>
          </div>
        </section>
      </main>
    </div>
  );
};

export default PantryList;